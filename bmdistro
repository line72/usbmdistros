#!/usr/bin/env python3
#
# bmdistro
# (c) 2021 Marcus Dillavou <line72@line72.net>
#
# Released under the GPLv3
#

import libbmdistro


def go():
    db = libbmdistro.DB()

    stores = {
        'stovokor': db.get_store(libbmdistro.Store(None, "Sto'Vo'Kor Records", "https://stovokor-records.com")),
        'arcane-altar': db.get_store(libbmdistro.Store(None, "Arcane Altar", "https://arcanealtar.bigcartel.com")),
        'debemur-morti': db.get_store(libbmdistro.Store(None, 'Debemur Morti', "https://debemurmorti.aisamerch.com/")),
        'caligari': db.get_store(libbmdistro.Store(None, 'Caligari Records', "https://caligarirecords.storenvy.com/"))
    }

    parsers = [
        #libbmdistro.parsers.StoVoKor(stores['stovokor'], 'https://stovokor-records.com/collections/all.atom'),
        libbmdistro.parsers.StoVoKor(stores['stovokor'], 'https://stovokor-records.com/products.json'),
        libbmdistro.parsers.ArcaneAltar(stores['arcane-altar'], 'https://arcanealtar.bigcartel.com/category/12-vinyl.xml'),
        libbmdistro.parsers.ArcaneAltar(stores['arcane-altar'], 'https://arcanealtar.bigcartel.com/category/10-vinyl.xml'),
        libbmdistro.parsers.ArcaneAltar(stores['arcane-altar'], 'https://arcanealtar.bigcartel.com/category/7-vinyl.xml'),
        libbmdistro.parsers.ArcaneAltar(stores['arcane-altar'], 'https://arcanealtar.bigcartel.com/category/tapes.xml'),
        libbmdistro.parsers.ArcaneAltar(stores['arcane-altar'], 'https://arcanealtar.bigcartel.com/category/cds.xml'),
        libbmdistro.parsers.DebemurMorti(stores['debemur-morti'], 'https://debemurmorti.aisamerch.com/c/music-video'),
        libbmdistro.parsers.Caligari(stores['caligari'], 'https://caligarirecords.storenvy.com/products.json'),
    ]

    
    for parser in parsers:
        print('parsing', parser.store.name)
        products = parser.parse(db)
        for p in products:
            db.add_product(p)

    # keys = sorted(db.items.keys())
    # for artist in keys:
    #     v = db.items[artist]
    #     print(f'{artist}')
    #     for album, v2 in v.items():
    #         print(f'  {album}')
    #         for item_type, v3 in v2.items():
    #             print(f'    {item_type}')
    #             for p in v3['products']:
    #                 print(f'      {p}')

                    
    o = libbmdistro.OutputWriter()
    o.write(db, 'website')

if __name__ == '__main__':
    go()
